// ==UserScript==
// @name BGA OPEN LEFT TILES
// @description  BGA Carcassone Counter of Tiles
// @icon        
// @author       Noelia Walter
// @version      0.9
// @namespace AceScript Scripts
// @match https://boardgamearena.com/*
// @updateURL    https://raw.githubusercontent.com/noeliawalterpro/BGAcarcassoneCounter/main/UserscriptBGACarcassoneCounter
// @downloadURL  https://raw.githubusercontent.com/noeliawalterpro/BGAcarcassoneCounter/main/UserscriptBGACarcassoneCounter
// @grant    none
// @run-at       document-end
// ==/UserScript==




var rio=document.getElementById('menu_option_value_106').innerHTML;
var princessDragons=document.getElementById('menu_option_value_107').innerHTML;
var innsAndCathedrals=document.getElementById('menu_option_value_103').innerHTML;
var builders=document.getElementById('menu_option_value_104').innerHTML;
var htmlUsedTiles="";
function isItemInArray(array, item) {
    for (var i = 0; i < array.length; i++) {
        // This if statement depends on the format of your array
        for (var j = 0; j < array[i].length; j++) {
            if (array[i][j] == item) {
                return i; // Found it
            }
        }
    }
    return false; // Not found
};

function counterTile() {
    /// on the of the turn
    i = 0;
    var text = "";

    while (document.getElementsByClassName('tile_art')[i].id) {

        text +=" , "+ document.getElementsByClassName('tile_art')[i].id ;
        i++;

    } text

    var mybrr = [text];
    var filtered = mybrr[0].replace(/\D+/g, ' ').trim().split(' ').map(e => parseInt(e));
    console.log(filtered);

    var bgaGAME=filtered;

    var selectedTiles=[{"set":"BASE","id":0,"qty":1,"tags":["road","road end","city"],"edges":["C","C","R","C"]},{"set":"BASE","id":1,"qty":2,"tags":["road","road end","city","shield"],"edges":["C","C","R","C"]},{"set":"BASE","id":2,"qty":3,"tags":["city","doritos"],"edges":["C","F","F","C"]},{"set":"BASE","id":3,"qty":2,"tags":["city","doritos","shield"],"edges":["C","F","F","C"]},{"set":"BASE","id":4,"qty":3,"tags":["city","doritos","road","curve"],"edges":["C","R","R","C"]},{"set":"BASE","id":5,"qty":2,"tags":["city","doritos","road","curve","shield"],"edges":["C","R","R","C"]},{"set":"BASE","id":6,"qty":1,"tags":["city","join"],"edges":["F","C","F","C"]},{"set":"BASE","id":7,"qty":2,"tags":["city","join","shield"],"edges":["F","C","F","C"]},{"set":"BASE","id":8,"qty":2,"tags":["city","top"],"edges":["C","F","F","C"]},{"set":"BASE","id":9,"qty":3,"tags":["city","top"],"edges":["C","F","C","F"]},{"set":"BASE","id":10,"qty":5,"tags":["city","top"],"edges":["C","F","F","F"]},{"set":"BASE","id":11,"qty":3,"tags":["city","top","road","curve","left"],"edges":["C","F","R","R"]},{"set":"BASE","id":12,"qty":3,"tags":["city","top","road","curve","right"],"edges":["C","R","R","F"]},{"set":"BASE","id":13,"qty":3,"tags":["city","top","road","road end"],"edges":["C","R","R","R"]},{"set":"BASE","id":14,"qty":4,"tags":["city","top","road","straight"],"edges":["C","R","F","R"]},{"set":"BASE","id":15,"qty":8,"tags":["road","straight"],"edges":["R","F","R","F"]},{"set":"BASE","id":16,"qty":9,"tags":["road","curve"],"edges":["F","F","R","R"]},{"set":"BASE","id":17,"qty":4,"tags":["road","road end"],"edges":["F","R","R","R"]},{"set":"BASE","id":18,"qty":1,"tags":["road","road end"],"edges":["R","R","R","R"]},{"set":"BASE","id":19,"qty":4,"tags":["monastery"],"edges":["F","F","F","F"]},{"set":"BASE","id":20,"qty":2,"tags":["monastery","road","road end"],"edges":["F","F","R","F"]},{"set":"BASE","id":21,"qty":1,"tags":["city","shield"],"edges":["C","C","C","C"]},{"set":"BASE","id":22,"qty":3,"tags":["city"],"edges":["C","C","F","C"]},{"set":"BASE","id":23,"qty":1,"tags":["city","shield"],"edges":["C","C","F","C"]}];

    var Bga_TileArt=[[1],[3,2],[6,5,4],[8,7],[11,10,9],[13,12],[14],[16,15],[18,17],[21,20,19],[26,25,24,23,22],[29,28,27],[32,31,30],[35,34,33],[39,38,37,36],[47,46,45,44,43,42,41,40],[56,55,54,53,52,51,50,49,48],[60,59,58,57],[61],[65,64,63,62],[67,66],[68],[71,70,69],[72]]
    var state2=[1,2,3,2,3,2,1,2,2,3,5,3,3,3,4,8,9,4,1,4,2,1,3,1];
    var qtyTiles=[1,2,3,2,3,2,1,2,2,3,5,3,3,3,4,8,9,4,1,4,2,1,3,1];


    //FUNCTIONS
    var x;
    var i;

    x = [];
    for ( i = 0; i <bgaGAME.length; i++ ) {


        x.push( isItemInArray(Bga_TileArt,bgaGAME[i]));
    }
    var useTiles=x;

    var leftTiles=state2;
    for ( i = 0; i <useTiles.length; i++ ) {
        var j=useTiles[i];
        var a=leftTiles[j]- 1;
        leftTiles[j]=a;
    };
    leftTiles;
    var remaningTiles = leftTiles.reduce((acc, tile) => tile + acc, 0);


    var htmlTiles=""
    var borderShadow;
    var borderColor;


    var opacity;
    for ( i = 0; i <selectedTiles.length; i++ ) {
        opacity = leftTiles[i] === 0 ? '0.4' : '1';

        borderShadow = leftTiles[i] > 0 ? 'rgba(0,0,0,0.19)': '0' ;
        borderColor = leftTiles[i] < qtyTiles[i] ? 'black' : 'white';
        borderColor = leftTiles[i] === 0 ? 'red' : 'white';
        //if (leftTiles[i] != 0){
        htmlTiles +='<div style="opacity:'+String(opacity)+'; border:4px solid ' +String( borderColor)+';  border-radius: 5px;background:url(//mecadesign3d.com/wp-content/uploads/2022/07/test-1.jpg); width:'+String(squaresize)+'; height:'+String(squaresize)+'; background-position: 0% -'+String(selectedTiles[i].id * 100)+'%; background-size:267px 7298px; display: inline-flex; margin: 10px; align-items:flex-end; box-shadow: 0 8px 16px 0' +String(borderShadow)+', 0 6px 20px 0 ' +String(borderShadow)+';">';
        htmlTiles +='  <div style="font-weigth:bold; font-size:16px; font-color:black; background-color:rgba(255,255,255,0.8); width:20px; height: 20px;padding: 5px; text-align: center; border: 1px solid #333">'+String(leftTiles[i]+"/"+qtyTiles[i])+'</div>';
        htmlTiles +='</div>'
        //}

    }


    var htmlUsedTiles="";
    for ( i = 0; i <leftTiles.length; i++ ) {
        opacity = leftTiles[i] === 0 ? '0.4' : '1';
        borderColor = leftTiles[i] === 0 ? '#CCC' : 'white';
        borderShadow = leftTiles[i] > 0 ? 'rgba(0,0,0,0.19)': '0' ;
        borderColor = leftTiles[i] < qtyTiles[i] ? 'red' : 'white';
        if (leftTiles[i] > 0){
            htmlUsedTiles +='<div style="opacity:'+String('1')+'; border:4px solid ' +String( borderColor)+';transform: scale(0.75);  border-radius: 5px;background:url(//mecadesign3d.com/wp-content/uploads/2022/07/test-1.jpg); width:'+String(squaresize)+'; height:'+String(squaresize)+'; background-position: 0% -'+String(selectedTiles[i].id * 100)+'%; background-size:267px 7298px; display: inline-flex;  align-items:flex-end; box-shadow: 0 8px 16px 0' +String(borderShadow)+', 0 6px 20px 0 ' +String(borderShadow)+';">';
            htmlUsedTiles +='  <div style="font-weigth:bold; font-size:16px; font-color:black; background-color:rgba(255,255,255,0.8); width:20px; height: 20px;padding: 5px; text-align: center; border: 1px solid #333">'+String(leftTiles[i]+"/"+qtyTiles[i])+'</div>';
            htmlUsedTiles +='</div>'
        }

    }

    document.getElementById('leftTile').innerHTML=htmlUsedTiles;


    document.getElementById('myModalTiles').innerHTML ='<div><li>RemaingTiles '+ String(remaningTiles)+' </li></div>';

    document.getElementById('myModalTiles').innerHTML +='<div style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;">'+htmlTiles+'</div>';

    /// END on the of the turn
}
if (princessDragons=='No' && rio=='No'&& innsAndCathedrals=='No' && builders=='No'){


    var idTile='upperrightmenu';
    var squaresize="89px";
    document.getElementById(idTile).innerHTML=document.getElementById(idTile).innerHTML+`
<div id="modal-tile-box" style="background: white;position: fixed;top: 122px;left: 0;padding: 10px;width: 300px;"></div>`;
    document.getElementById('modal-tile-box').innerHTML +=`<style>
body {font-family: Arial, Helvetica, sans-serif;}

/* The Modal (background) */
#mybtn{

}
.modal {
display: none; /* Hidden by default */
position: fixed; /* Stay in place */
z-index: 1; /* Sit on top */
padding-top: 100px; /* Location of the box */
left: 0;
top: 0;
width: 100%; /* Full width */
height: 100%; /* Full height */
overflow: auto; /* Enable scroll if needed */
background-color: rgb(0,0,0); /* Fallback color */
background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

div#leftTile {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    overflow-y: scroll;
height: 320px;
}

/* Modal Content */
.modal-content {
background-color: #fefefe;
margin: auto;
padding: 20px;
border: 1px solid #888;
width: 80%;
}

/* The Close Button */
.close {
color: #aaaaaa;
float: right;
font-size: 28px;
font-weight: bold;
}

.close:hover,
.close:focus {
color: #000;
text-decoration: none;
cursor: pointer;
}
</style>
</head>
<body>

<h2>Tiles Counter</h2>

<!-- Trigger/Open Tiles Left -->
<button id="myBtn" style="    border: 0;
padding: 20px;
  padding-top: 20px;
  padding-right: 20px;
  padding-bottom: 20px;
  padding-left: 20px;
width: 100%;
background: #73C13C;
font-size: 20px;
box-shadow: 5px 5px green;">Open </button>



<button id="myBtn2" style="    border: 0;
padding: 10px;
width: 100%;
grid-column:1/3;
color:white;
background: blue;
font-size: 20px;
box-shadow: 5px 5px green;">Hide Left Tiles </button>
<button id="myBtn3" style="    border: 0;
padding: 10px;
width: 100%;
grid-column:1/3;
color:white;
background: blue;
font-size: 20px;
box-shadow: 5px 5px green;">Show Left Tiles </button>

<div id="leftTile"></div>


<!-- The Modal -->
<div id="myModal" class="modal">

<!-- Modal content -->
<div class="modal-content">
<h2>Tiles Left Counter</h2>
<span class="close">&times;</span>
<div id="myModalTiles"></div>

</div>

</div>`;



    var modal = document.getElementById("myModal");



    // Get the button that opens the modal
    var btn = document.getElementById("myBtn");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks the button, open the modal
    btn.onclick = function(){
        modal.style.display = "block";
        btn2.style.display = 'block';
        counterTile();
    }
    document.getElementById('leftTile').innerHTML=htmlUsedTiles;

    const btn2 = document.getElementById('myBtn2');
    const btn3 = document.getElementById('myBtn3');
    btn2.style.display = 'none';
    btn3.style.display = 'none';
    btn3.addEventListener('click', () => {
        // 👇️ hide button (still takes up space on page)
        btn2.style.display = 'block';
        btn3.style.display = 'none';

        // 👇️ show div
        const box = document.getElementById('leftTile');

        box.style.display= 'grid';
    });
    btn2.addEventListener('click', () => {
        // 👇️ hide button (still takes up space on page)
        btn2.style.display = 'none';
        btn3.style.display = 'block';

        // 👇️ show div
        const box = document.getElementById('leftTile');

        box.style.display = 'none';
    });
    // When the user clicks on <span> (x), close the modal
    span.onclick = function() {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
    counterTile();
    modal.style.display = "none";

}

